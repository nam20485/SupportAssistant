name: Build and Package

on:
  push:
    branches: [ main, master, develop, feature/* ]
  pull_request:
    branches: [ main, master, develop ]
  release:
    types: [ published ]

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-and-test:
    name: Build and Test
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
    
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --logger trx --results-directory "test-results"
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: test-results
        retention-days: 30
  
  package:
    name: Package Application
    runs-on: windows-latest
    needs: build-and-test
    if: github.event_name == 'push' || github.event_name == 'release'
    
    strategy:
      matrix:
        runtime: [win-x64, win-arm64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Publish application
      run: |
        dotnet publish src/SupportAssistant/SupportAssistant.csproj `
          --configuration Release `
          --runtime ${{ matrix.runtime }} `
          --self-contained true `
          --output dist/${{ matrix.runtime }} `
          --no-restore `
          /p:PublishSingleFile=true `
          /p:PublishTrimmed=true `
          /p:TrimMode=partial `
          /p:IncludeNativeLibrariesForSelfExtract=true `
          /p:PublishReadyToRun=true
    
    - name: Create portable package
      run: |
        $version = "1.0.0"
        if ($env:GITHUB_REF -like "refs/tags/v*") {
          $version = $env:GITHUB_REF -replace "refs/tags/v", ""
        }
        Compress-Archive -Path "dist/${{ matrix.runtime }}/*" -DestinationPath "SupportAssistant-$version-${{ matrix.runtime }}-portable.zip"
    
    - name: Upload portable package
      uses: actions/upload-artifact@v3
      with:
        name: SupportAssistant-${{ matrix.runtime }}-portable
        path: SupportAssistant-*-${{ matrix.runtime }}-portable.zip
        retention-days: 90
    
    - name: Upload to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: SupportAssistant-*-${{ matrix.runtime }}-portable.zip
        asset_name: SupportAssistant-${{ github.event.release.tag_name }}-${{ matrix.runtime }}-portable.zip
        asset_content_type: application/zip
  
  msix-package:
    name: Create MSIX Package
    runs-on: windows-latest
    needs: build-and-test
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Add Windows App SDK
      run: dotnet add src/SupportAssistant/SupportAssistant.csproj package Microsoft.WindowsAppSDK
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build MSIX package
      run: |
        dotnet publish src/SupportAssistant/SupportAssistant.csproj `
          --configuration Release `
          --runtime win-x64 `
          --self-contained true `
          --output dist/msix `
          --no-restore `
          /p:WindowsPackageType=MSIX `
          /p:GenerateAppInstallerFile=true
      continue-on-error: true
    
    - name: Upload MSIX package
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: SupportAssistant-MSIX
        path: dist/msix/*.msix
        retention-days: 90
